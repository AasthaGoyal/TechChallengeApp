AWSTemplateFormatVersion: 2010-09-09

Description: Template to create EC2 instance and RDS database for Postgress

Parameters:
  VpcId: 
    Description: VPC id 
    Type: AWS::EC2::VPC::Id

  SubnetId1:
    Description: Subnet Id where instance will be created
    Type: AWS::EC2::Subnet::Id
    Default: vpc-0abd3e892b3173fef

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName

  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.micro]

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})

  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

  PostgressDb:
    Default: serviandb
    Description: postgress database
    Type: String

  RdsUsername:
    Type: String

  RdsPass:
    Type: String

Resources:

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Enable SSH access via port 22 and http access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref 'SSHLocation'
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: '0.0.0.0/0'

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: servian/techchallengeapp:latest
      InstanceType: !Ref InstanceType
      SecurityGroupIds: 
        - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !Ref LatestAmiId
      SubnetId: !Ref SubnetId1
      UserData:
        Fn::Base64: !Sub
        - |
          #!/bin/bash
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          # Sleep for the instance role might not be properly attached
          sleep 10

          # Install httpd2 for testing 
          rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
          rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
          sudo yum --enablerepo=remi,remi-php71 install httpd php php-common -y
          sudo systemctl start httpd.service
          sudo systemctl enable httpd.service

          #Install docker
          sudo yum update -y
          sudo yum install -y docker
          sudo yum install -y golang
          sudo server docker start

          #Add Ec2 user to the docker group
          sudo usermod -a -G docker ec2-user

        - {
          }  


  RdsPostgress:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      BackupRetentionPeriod: 0
      DBName: !Ref PostgressDb
      DBInstanceClass: db.t2.micro
      Engine: postgres
      EngineVersion: 11.12
      MasterUsername: !Ref RdsUsername
      MasterUserPassword: !Ref RdsPass
      MaxAllocatedStorage: 20
      MultiAZ: false
      DBSecurityGroups:
        - !Ref PostGressSecurityGroup

  PostGressSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress:
        CIDRIP: 0.0.0.0/0
      GroupDescription: "Security Group for Postgress"

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref 'EC2Instance'

  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, AvailabilityZone]

  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicDnsName]
